{"name": "test_create_user[item0]", "status": "broken", "statusDetails": {"message": "TypeError: list indices must be integers or slices, not str", "trace": "get_base_url = 'http://localhost:8080', item = {'name': 'test001', 'password': '123456', 'repassword': '123456'}\n\n    @pytest.mark.dependency(name=\"create_users\")\n    @pytest.mark.parametrize(\"item\", _load_create_data())\n    def test_create_user(get_base_url, item):\n        \"\"\"\n        创建用户，落盘到 extract.yaml\n        \"\"\"\n        url = f\"{get_base_url}/user/createUser\"\n        resp = requests.post(url, params={\"name\": item[\"name\"], \"password\": item[\"password\"]})\n        print(resp.text)\n        assert resp.status_code == 200\n        j = resp.json()\n        assert j[\"code\"] == 0, f\"创建失败: {j['message']}\"\n    \n        u = {\n            \"id\": j[\"data\"][\"id\"],\n            \"identity\": j[\"data\"][\"identity\"],\n            \"name\": j[\"data\"][\"name\"],\n            \"password\": item[\"password\"],\n        }\n        # 1) 把该用户追加到 extract.yaml -> users 列表\n        extract_list_append(u)\n    \n        # 2) 设定 primary_user_id（仅在第一次写入时设置）\n        primary_id = extract_get(\"primary_user_id\")\n        if not primary_id:\n>           extract_set(\"primary_user_id\", u[\"id\"])\n\ntestcases\\test_user_create.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\yaml_util.py:82: in extract_set\n    write_yaml(key, value, file_path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nkey = 'primary_user_id', value = 23, file_path = 'E:\\\\pytest_ginchat_api (1)\\\\extract.yaml'\n\n    def write_yaml(key, value, file_path):\n        \"\"\"写入或更新 YAML 文件中的某个键\"\"\"\n        data = {}\n        if os.path.exists(file_path):\n            with open(file_path, \"r\", encoding=\"utf-8\") as f:\n                data = yaml.safe_load(f) or {}\n    \n>       data[key] = value\n        ^^^^^^^^^\nE       TypeError: list indices must be integers or slices, not str\n\ncommon\\yaml_util.py:32: TypeError"}, "description": "\n    创建用户，落盘到 extract.yaml\n    ", "parameters": [{"name": "item", "value": "{'name': 'test001', 'password': '123456', 'repassword': '123456'}"}], "start": 1761039442740, "stop": 1761039443116, "uuid": "59fc59a4-a974-44f2-a626-1283d1715a9a", "historyId": "82819c17acbf5855a3054f9c35b979c4", "testCaseId": "28003e8ffc50fbad52c38a02461ca6c2", "fullName": "testcases.test_user_create#test_create_user", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_user_create"}, {"name": "host", "value": "DESKTOP-UGQEI6T"}, {"name": "thread", "value": "33236-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_user_create"}], "titlePath": ["testcases", "test_user_create.py"]}